// RUN: @calcc --verbose --ast --parse -e "0 - N"      2>&1 | @filecheck %s --check-prefix=CHECK_A
// RUN: @calcc --verbose --ast --parse -e "-N"         2>&1 | @filecheck %s --check-prefix=CHECK_B
// RUN: @calcc --verbose --ast --parse -e "-N + 2"     2>&1 | @filecheck %s --check-prefix=CHECK_C
// RUN: @calcc --verbose --ast --parse -e "2 + -N"     2>&1 | @filecheck %s --check-prefix=CHECK_D
// RUN: @calcc --verbose --ast --parse -e "-(N) + 2"   2>&1 | @filecheck %s --check-prefix=CHECK_E
// RUN: @calcc --verbose --ast --parse -e "2 + -(N)"   2>&1 | @filecheck %s --check-prefix=CHECK_F
// RUN: @calcc --verbose --ast --parse -e "2 + -(N*2)" 2>&1 | @filecheck %s --check-prefix=CHECK_G

// CHECK_A: Consumed expected token 'Number' at position '0'
// CHECK_A: Consumed expected token 'Minus' at position '1'
// CHECK_A: Consumed expected token 'Ident' at position '2'
// CHECK_A: AST: BinaryOp(Sub,0,Ident(N))

// CHECK_B: Consumed expected token 'Minus' at position '0'
// CHECK_B: Consumed expected token 'Ident' at position '1'
// CHECK_B: AST: BinaryOp(Sub,0,Ident(N))

// CHECK_C: Consumed expected token 'Minus' at position '0'
// CHECK_C: Consumed expected token 'Ident' at position '1'
// CHECK_C: Consumed expected token 'Plus' at position '2'
// CHECK_C: Consumed expected token 'Number' at position '3'
// CHECK_C: AST: BinaryOp(Add,BinaryOp(Sub,0,Ident(N)),2)

// CHECK_D: Consumed expected token 'Number' at position '0'
// CHECK_D: Consumed expected token 'Plus' at position '1'
// CHECK_D: Consumed expected token 'Minus' at position '2'
// CHECK_D: Consumed expected token 'Ident' at position '3'
// CHECK_D: AST: BinaryOp(Add,2,BinaryOp(Sub,0,Ident(N)))

// CHECK_E: Consumed expected token 'Minus' at position '0'
// CHECK_E: Consumed expected token 'ParenL' at position '1'
// CHECK_E: Consumed expected token 'Ident' at position '2'
// CHECK_E: Consumed expected token 'ParenR' at position '3'
// CHECK_E: Consumed expected token 'Plus' at position '4'
// CHECK_E: Consumed expected token 'Number' at position '5'
// CHECK_E: AST: BinaryOp(Add,BinaryOp(Sub,0,Ident(N)),2)

// CHECK_F: Consumed expected token 'Number' at position '0'
// CHECK_F: Consumed expected token 'Plus' at position '1'
// CHECK_F: Consumed expected token 'Minus' at position '2'
// CHECK_F: Consumed expected token 'ParenL' at position '3'
// CHECK_F: Consumed expected token 'Ident' at position '4'
// CHECK_F: Consumed expected token 'ParenR' at position '5'
// CHECK_F: AST: BinaryOp(Add,2,BinaryOp(Sub,0,Ident(N)))

// CHECK_G: Consumed expected token 'Number' at position '0'
// CHECK_G: Consumed expected token 'Plus' at position '1'
// CHECK_G: Consumed expected token 'Minus' at position '2'
// CHECK_G: Consumed expected token 'ParenL' at position '3'
// CHECK_G: Consumed expected token 'Ident' at position '4'
// CHECK_G: Consumed expected token 'Star' at position '5'
// CHECK_G: Consumed expected token 'Number' at position '6'
// CHECK_G: Consumed expected token 'ParenR' at position '7'
// CHECK_G: AST: BinaryOp(Add,2,BinaryOp(Sub,0,BinaryOp(Mul,Ident(N),2)))
